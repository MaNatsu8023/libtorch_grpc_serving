// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: example.proto

#ifndef PROTOBUF_INCLUDED_example_2eproto
#define PROTOBUF_INCLUDED_example_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3007000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3007000 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_example_2eproto

// Internal implementation detail -- do not use these members.
struct TableStruct_example_2eproto {
  static const ::google::protobuf::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::ParseTable schema[2]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors_example_2eproto();
namespace example {
class ClassifyResult;
class ClassifyResultDefaultTypeInternal;
extern ClassifyResultDefaultTypeInternal _ClassifyResult_default_instance_;
class ImageMatrix;
class ImageMatrixDefaultTypeInternal;
extern ImageMatrixDefaultTypeInternal _ImageMatrix_default_instance_;
}  // namespace example
namespace google {
namespace protobuf {
template<> ::example::ClassifyResult* Arena::CreateMaybeMessage<::example::ClassifyResult>(Arena*);
template<> ::example::ImageMatrix* Arena::CreateMaybeMessage<::example::ImageMatrix>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace example {

// ===================================================================

class ImageMatrix final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:example.ImageMatrix) */ {
 public:
  ImageMatrix();
  virtual ~ImageMatrix();

  ImageMatrix(const ImageMatrix& from);

  inline ImageMatrix& operator=(const ImageMatrix& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ImageMatrix(ImageMatrix&& from) noexcept
    : ImageMatrix() {
    *this = ::std::move(from);
  }

  inline ImageMatrix& operator=(ImageMatrix&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const ImageMatrix& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ImageMatrix* internal_default_instance() {
    return reinterpret_cast<const ImageMatrix*>(
               &_ImageMatrix_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(ImageMatrix* other);
  friend void swap(ImageMatrix& a, ImageMatrix& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ImageMatrix* New() const final {
    return CreateMaybeMessage<ImageMatrix>(nullptr);
  }

  ImageMatrix* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ImageMatrix>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ImageMatrix& from);
  void MergeFrom(const ImageMatrix& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ImageMatrix* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated int32 image_matrix = 1;
  int image_matrix_size() const;
  void clear_image_matrix();
  static const int kImageMatrixFieldNumber = 1;
  ::google::protobuf::int32 image_matrix(int index) const;
  void set_image_matrix(int index, ::google::protobuf::int32 value);
  void add_image_matrix(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      image_matrix() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_image_matrix();

  // @@protoc_insertion_point(class_scope:example.ImageMatrix)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > image_matrix_;
  mutable std::atomic<int> _image_matrix_cached_byte_size_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_example_2eproto;
};
// -------------------------------------------------------------------

class ClassifyResult final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:example.ClassifyResult) */ {
 public:
  ClassifyResult();
  virtual ~ClassifyResult();

  ClassifyResult(const ClassifyResult& from);

  inline ClassifyResult& operator=(const ClassifyResult& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ClassifyResult(ClassifyResult&& from) noexcept
    : ClassifyResult() {
    *this = ::std::move(from);
  }

  inline ClassifyResult& operator=(ClassifyResult&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const ClassifyResult& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ClassifyResult* internal_default_instance() {
    return reinterpret_cast<const ClassifyResult*>(
               &_ClassifyResult_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  void Swap(ClassifyResult* other);
  friend void swap(ClassifyResult& a, ClassifyResult& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ClassifyResult* New() const final {
    return CreateMaybeMessage<ClassifyResult>(nullptr);
  }

  ClassifyResult* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ClassifyResult>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ClassifyResult& from);
  void MergeFrom(const ClassifyResult& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ClassifyResult* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int32 result = 1;
  void clear_result();
  static const int kResultFieldNumber = 1;
  ::google::protobuf::int32 result() const;
  void set_result(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:example.ClassifyResult)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int32 result_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_example_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// ImageMatrix

// repeated int32 image_matrix = 1;
inline int ImageMatrix::image_matrix_size() const {
  return image_matrix_.size();
}
inline void ImageMatrix::clear_image_matrix() {
  image_matrix_.Clear();
}
inline ::google::protobuf::int32 ImageMatrix::image_matrix(int index) const {
  // @@protoc_insertion_point(field_get:example.ImageMatrix.image_matrix)
  return image_matrix_.Get(index);
}
inline void ImageMatrix::set_image_matrix(int index, ::google::protobuf::int32 value) {
  image_matrix_.Set(index, value);
  // @@protoc_insertion_point(field_set:example.ImageMatrix.image_matrix)
}
inline void ImageMatrix::add_image_matrix(::google::protobuf::int32 value) {
  image_matrix_.Add(value);
  // @@protoc_insertion_point(field_add:example.ImageMatrix.image_matrix)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
ImageMatrix::image_matrix() const {
  // @@protoc_insertion_point(field_list:example.ImageMatrix.image_matrix)
  return image_matrix_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
ImageMatrix::mutable_image_matrix() {
  // @@protoc_insertion_point(field_mutable_list:example.ImageMatrix.image_matrix)
  return &image_matrix_;
}

// -------------------------------------------------------------------

// ClassifyResult

// int32 result = 1;
inline void ClassifyResult::clear_result() {
  result_ = 0;
}
inline ::google::protobuf::int32 ClassifyResult::result() const {
  // @@protoc_insertion_point(field_get:example.ClassifyResult.result)
  return result_;
}
inline void ClassifyResult::set_result(::google::protobuf::int32 value) {
  
  result_ = value;
  // @@protoc_insertion_point(field_set:example.ClassifyResult.result)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace example

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // PROTOBUF_INCLUDED_example_2eproto
